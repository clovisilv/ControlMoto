package br.com.cs.controlmoto.controller;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

import br.com.cs.controlmoto.domain.AutenticacaoDAO;
import br.com.cs.controlmoto.utils.FixedLengthDocument;
import br.com.cs.controlmoto.utils.LerArquivo;
import br.com.cs.controlmoto.vo.AutenticacaoVO;
import br.com.cs.controlmoto.vo.CadUsuariosVO;
import br.com.cs.controlmoto.vo.LerArquivoVO;

/**
 * Company Fictec Cons. Inf.
 * @since 06/09/2012
 * @version 1.0.6
 * @author Clovis
 */

class Autenticacao extends JDialog implements ActionListener, FocusListener, KeyListener{

	/**
	 * 
	 */
	private static final long serialVersionUID = 241356687239467432L;
	
	JLabel lblLogin,lblSenha;
	JTextField txtLogin;
	JPasswordField jpwSenha;
	JButton btoConfirma, btoCancelar;
	JPanel jpLogin,jpBotao;

	String usuarioLog, usuarioHab, separadorPath="", caminho="";

	Dimension centraliza = Toolkit.getDefaultToolkit().getScreenSize();

	ResultSet rs;
	Statement minhaSTM;
	Connection minhaConexao;

	private String recName = "";
	private String recSenha = "";
	private String recStatus = "";
	private String recTipoUsuario = "";
	ImageIcon icone=null;

	public Autenticacao(javax.swing.JFrame parent, boolean modal){
		super(parent, modal);
		initAutenticacao();
	}

	public Autenticacao() {
	}

	public static void autenticacao(){
		JDialog Autenticacao = new Autenticacao(new javax.swing.JFrame(), true);
		Autenticacao.setVisible(true);
	}
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	public void initAutenticacao(){
		separadorPath = System.getProperty("file.separator");
		caminho = new File("").getAbsolutePath();
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("ControlMoto - Acessar");
		setSize(250,200);
		setResizable(false);
		setLocationRelativeTo(null); 
		//ImageIcon icone = new ImageIcon("..//ControlMoto/imagens/logo_cs_b.gif");
		//CAMINHO CORRETO PARA FUNCIONAR NO JAR
		//ImageIcon icone = new ImageIcon(caminho+separadorPath+"imagens"+separadorPath+"logo_cs_b.gif");
		//CAMINHO CORRETO PARA FUNCIONAR NO ECLIPSE
		//icone = new ImageIcon(caminho+separadorPath+"imagens"+separadorPath+"logo_cs_b.gif");
		LerArquivoVO lerArquivoVO = new LerArquivoVO();
		LerArquivo lerArquivo = new LerArquivo();
		lerArquivoVO = lerArquivo.getInformacao(lerArquivoVO);
		icone = new ImageIcon(caminho+separadorPath+lerArquivoVO.getLogoTipo()+separadorPath+"lg_fictec_gr.png");//logo_cs_b.gif
		setIconImage(icone.getImage());  	
		//setLocation((centraliza.width-this.getSize().width)/2,(centraliza.height-this.getSize().height)/2);  

		GridBagConstraints cons = new GridBagConstraints();
		Container Aut = getContentPane();
		GridBagLayout Layout = new GridBagLayout();

		cons.insets = new Insets(5,10,5,10); 
		//constroi componentes
		lblLogin = new JLabel ("Login");lblSenha = new JLabel ("Senha");
		txtLogin = new JTextField (10);txtLogin.setDocument(new FixedLengthDocument(6));
		jpwSenha = new JPasswordField (6);jpwSenha.setDocument(new FixedLengthDocument(6));
		btoConfirma = new JButton("Confirma"); btoCancelar = new JButton("Cancelar");
		jpLogin = new JPanel(Layout);jpBotao = new JPanel(Layout);
		//adiciona componentes
		cons.anchor = GridBagConstraints.NORTHWEST;
		cons.gridx = 2;cons.gridy = 1;cons.gridwidth = 2;
		jpLogin.add(lblLogin,cons);
		cons.gridx = 5;cons.gridy = 1;cons.gridwidth = 4;
		cons.fill = GridBagConstraints.BOTH;
		jpLogin.add(txtLogin,cons);

		cons.gridx = 2;cons.gridy = 2;cons.gridwidth = 2;
		jpLogin.add(lblSenha,cons);
		cons.gridx = 5;cons.gridy = 2;cons.gridwidth = 4;
		cons.fill = GridBagConstraints.BOTH;
		jpLogin.add(jpwSenha,cons);

		cons.gridx = 1;cons.gridy = 4;cons.gridwidth = 2;
		cons.fill = GridBagConstraints.HORIZONTAL;
		jpBotao.add(btoConfirma,cons);
		cons.gridx = 4;cons.gridy = 4;cons.gridwidth = 2;
		cons.fill = GridBagConstraints.HORIZONTAL;
		jpBotao.add(btoCancelar,cons);

		//Adiciona acao aos botoes
		btoConfirma.addActionListener(this);
		btoCancelar.addActionListener(this);btoCancelar.addKeyListener(this);
		Aut.addKeyListener(this);txtLogin.addKeyListener(this);jpwSenha.addKeyListener(this);

		Aut.add(jpLogin,BorderLayout.CENTER);
		Aut.add(jpBotao,BorderLayout.SOUTH);
	}
	/*
	 * (non-Javadoc)
	 * @see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
	 * Todos os eventos referente ao focus dos componentes
	 */
	public void focusGained(FocusEvent c){
		if(c.getSource()==txtLogin){txtLogin.selectAll();}
		if(c.getSource()==jpwSenha){jpwSenha.selectAll();}
	}
	public void focusLost(FocusEvent c){
	}
	public void keyPressed(KeyEvent c){
		if (c.getKeyCode() == KeyEvent.VK_ESCAPE){
			System.exit(0);
		}
	}
	public void keyReleased(KeyEvent c){
	}
	public void keyTyped(KeyEvent c){
	}
	/*
	 * (non-Javadoc)
	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
	 * Todos os eventos referente as acoes dos componentes
	 */
	public void actionPerformed(ActionEvent c){
		if (c.getSource() == btoConfirma){
			try{
				if(txtLogin.getText() != null && !txtLogin.getText().equals("") && jpwSenha.getText() != null && !jpwSenha.getText().equals("") && jpwSenha.getPassword() != null && !jpwSenha.getPassword().equals("")){
					AutenticacaoVO autenticacaoVO = new AutenticacaoVO();
					autenticacaoVO.setUsuarioTela(txtLogin.getText());
					autenticacaoVO.setSenhaTela(jpwSenha.getText());
					
					AutenticacaoDAO autenticacaoDAO = new AutenticacaoDAO();
					autenticacaoDAO.logarUsuario(autenticacaoVO);
				
					if (autenticacaoVO.getUsuarioTela().equals(autenticacaoVO.getLogin()) && autenticacaoVO.getSenhaTela().equals(autenticacaoVO.getSenha()) && autenticacaoVO.getStatus().equals("HABILITADO") ){
						autenticacaoVO.setUsuarioLog(autenticacaoVO.getLogin());
						autenticacaoVO.setTipoUsuarioLog(autenticacaoVO.getTipoUsuario());
						autenticacaoVO.setStatusLog(autenticacaoVO.getStatus());
						CadUsuariosVO usuariosVO = new CadUsuariosVO();
						usuariosVO.setUsuarioLogin(autenticacaoVO.getLogin());
						usuariosVO.setTipoUsuarioLogin(autenticacaoVO.getTipoUsuario());
						usuariosVO.setStatusLogin(autenticacaoVO.getStatus());
						controlaUsuario(usuariosVO);
						dispose();
					}
//					else{
//						int resul = JOptionPane.showConfirmDialog(this,"Usuário ou senha errado!!! \nDigite o usuário e senha !","ControlMoto",JOptionPane.YES_OPTION,JOptionPane.WARNING_MESSAGE);
//						if (resul == 0){
//							txtLogin.setText("");jpwSenha.setText("");txtLogin.requestFocus();
//							return;
//						}else{
//							System.exit(0);
//						}
//					}
				}else{
//					int resul = JOptionPane.showConfirmDialog(this,"Os campos não podem ser vazios!!! \nDigite o usuário e senha !","ControlMoto",JOptionPane.YES_OPTION,JOptionPane.WARNING_MESSAGE);
					 JOptionPane.showConfirmDialog(this,"Os campos não podem ser vázios!!! \nDigite o usuário e senha !","ControlMoto",JOptionPane.YES_OPTION,JOptionPane.WARNING_MESSAGE);
//					if (resul == 0){
					txtLogin.setText("");jpwSenha.setText("");txtLogin.requestFocus();
					return;
				}
//				}
			}catch(SQLException e){
				JOptionPane.showMessageDialog(this, "Usuário ou senha inválido.","ControlMoto",JOptionPane.INFORMATION_MESSAGE);
			}catch (IllegalAccessException e) {
				e.printStackTrace();
			}catch (InstantiationException e) {
				e.printStackTrace();
			}

		}
		
		if (c.getSource()== btoCancelar){
			dispose();
		}
	}

	public final String getRecName() {
		return recName;
	}
	public final String getRecSenha() {
		return recSenha;
	}
	public final String getRecStatus() {
		return recStatus;
	}
	public final String getRecTipoUsuario() {
		return recTipoUsuario;
	}
	public void setRecName(String recName) {
		this.recName = recName;
	}
	public void setRecSenha(String recSenha) {
		this.recSenha = recSenha;
	}
	public void setRecStatus(String recStatus) {
		this.recStatus = recStatus;
	}
	public void setRecTipoUsuario(String recTipoUsuario) {
		this.recTipoUsuario = recTipoUsuario;
	}
	public CadUsuariosVO controlaUsuario(CadUsuariosVO usuariosVO){
		return usuariosVO;
	}
	
	private void selectAll() {
//		txtCodigoordem.selectAll();
//		txtNomecliente.selectAll();
//		txtEndereco.selectAll();
//		txtValorhora.selectAll();
//		txtTaxa.selectAll();
//		txtNomemotorista.selectAll();
//		txtTotalcliente.selectAll();
//		txtValorhora.selectAll();
//		txtComissao.selectAll();
//		txtTotalmotorista.selectAll();
	}

}