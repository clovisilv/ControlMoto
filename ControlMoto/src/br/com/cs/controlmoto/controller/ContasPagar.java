package br.com.cs.controlmoto.controller;

import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import br.com.cs.controlmoto.domain.CadFornecedorDAO;
import br.com.cs.controlmoto.domain.ContasPagarDAO;
import br.com.cs.controlmoto.utils.ConvertStringToDate;
import br.com.cs.controlmoto.utils.FormataValor;
import br.com.cs.controlmoto.utils.ValidaData;
import br.com.cs.controlmoto.vo.CadFornecedorVO;
import br.com.cs.controlmoto.vo.ContasPagar1VO;
import br.com.cs.controlmoto.vo.ContasPagarVO;
import br.com.cs.controlmoto.vo.EspecieDocumentoVO;
import br.com.cs.controlmoto.vo.FormaCobrancaJurosVO;
import br.com.cs.controlmoto.vo.FormaPagtoVO;
import br.com.cs.controlmoto.vo.SituacaoVO;
import br.com.cs.controlmoto.vo.TipoPagtoVO;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Company Fictec Cons. Inf.
 * @since 06/09/2012
 * @version 1.0.6
 * @author Clovis
 */
public class ContasPagar extends javax.swing.JInternalFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form ContasPagar
     */
    public ContasPagar(String titulo, ControlMoto controlMoto) {
    	initComponents(titulo, controlMoto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(String titulo, ControlMoto controlMoto) {

        jpCampos = new javax.swing.JPanel(); jpBotao = new javax.swing.JPanel(); jpLista = new javax.swing.JPanel();
        
        lblDtDocumento = new javax.swing.JLabel();
        lblCod = new javax.swing.JLabel(); lblCodConta = new javax.swing.JLabel(); lblSituacao = new javax.swing.JLabel();
        lblCredor = new javax.swing.JLabel(); lblCredorNome = new javax.swing.JLabel(); lvlDtVencimento = new javax.swing.JLabel();
        lblDtQuitacao = new javax.swing.JLabel(); lblNumDocumento = new javax.swing.JLabel(); lblEspDocumento = new javax.swing.JLabel();
        lblVlDocumento = new javax.swing.JLabel(); lblTpPagto = new javax.swing.JLabel(); lblFormaPagto = new javax.swing.JLabel();
        lblTxJuros = new javax.swing.JLabel(); lblTpFormaPagto = new javax.swing.JLabel(); lblTxMulta = new javax.swing.JLabel();
        lblFormaPagtoDescricao = new javax.swing.JLabel(); lblEspDocumentoDescicao = new javax.swing.JLabel(); lblTpPagtoDescricao = new javax.swing.JLabel();
        lblFormaCobrancaJurosDescricao = new javax.swing.JLabel(); lblVlPagar = new javax.swing.JLabel(); lblCodBarras = new javax.swing.JLabel();
        lblCodContaList = new javax.swing.JLabel(); lblDtFinal = new javax.swing.JLabel(); lblCredorList = new javax.swing.JLabel(); 
        jLabel17 = new javax.swing.JLabel();
        
        jrbTpTitulo = new javax.swing.JRadioButton(); jrbTpTaxaJuros = new javax.swing.JRadioButton(); jrbTpTaxaMulta = new javax.swing.JRadioButton();
        
        jcbSituacao = new javax.swing.JComboBox(); jcbEspDocumento = new javax.swing.JComboBox(); jcbTpPagto = new javax.swing.JComboBox();
        jcbFormaPagto = new javax.swing.JComboBox(); jcbTpFormaCobranca = new javax.swing.JComboBox(); jcbCredor = new javax.swing.JComboBox();
        jcbCredorList = new javax.swing.JComboBox();
        
        jftDtDocumento = new javax.swing.JFormattedTextField(); jftDtVencimento = new javax.swing.JFormattedTextField(); jftDtQuitacao = new javax.swing.JFormattedTextField();
        jftTaxaJuros = new javax.swing.JFormattedTextField(); jftVlDocumento = new javax.swing.JFormattedTextField(); jftTxMulta = new javax.swing.JFormattedTextField();
        jftDtInicio = new javax.swing.JFormattedTextField(); jftDtFinal = new javax.swing.JFormattedTextField();
        
        txtNumDocumento = new javax.swing.JTextField(); txtVlPagar = new javax.swing.JTextField(); txtCodBarra = new javax.swing.JTextField();
        txtCodContaList = new javax.swing.JTextField();
        
        btoIncluir = new javax.swing.JButton(); btoSalvar = new javax.swing.JButton(); btoAtualizar = new javax.swing.JButton();
        btoExcluir = new javax.swing.JButton(); btoLocalizar = new javax.swing.JButton();
        
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        
        setLocation(xOffset*openFrameCount, yOffset*openFrameCount);
        this.telaControlMoto = telaControlMoto;
    	controlMoto.jDesktopPane.add(this);

        setClosable(true);
        setIconifiable(true);
        setTitle("Contas a Pagar");
        setToolTipText("Contas a Pagar");
        setMaximumSize(new java.awt.Dimension(900, 800));
        setMinimumSize(new java.awt.Dimension(600, 500));
        setPreferredSize(new java.awt.Dimension(805, 570));//Largura-Altura
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jpCampos.setMaximumSize(new java.awt.Dimension(550, 200));
        jpCampos.setMinimumSize(new java.awt.Dimension(550, 200));
        jpCampos.setPreferredSize(new java.awt.Dimension(550, 200));

        lblCod.setText("Código");

        jrbTpTitulo.setSelected(true);
        jrbTpTitulo.setText("Título");
        jrbTpTitulo.setToolTipText("Conta de concessionária (Telefone/Água/Luz) clique aqui.");

        lblCodConta.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCodConta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblCodConta.setMaximumSize(new java.awt.Dimension(34, 20));
        lblCodConta.setMinimumSize(new java.awt.Dimension(34, 20));
        lblCodConta.setPreferredSize(new java.awt.Dimension(34, 20));

        lblSituacao.setText("Situação");

        lblCredor.setText("Credor");

        lblCredorNome.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblCredorNome.setMaximumSize(new java.awt.Dimension(34, 20));
        lblCredorNome.setMinimumSize(new java.awt.Dimension(34, 20));
        lblCredorNome.setPreferredSize(new java.awt.Dimension(34, 20));

        lblDtDocumento.setText("Data Documento");

        try {
            jftDtDocumento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftDtDocumento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jftDtDocumento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftDtDocumentoFocusLost(evt);
            }
        });

        lvlDtVencimento.setText("Data Vencimento");

        try {
            jftDtVencimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftDtVencimento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jftDtVencimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftDtVencimentoFocusLost(evt);
            }
        });

        lblDtQuitacao.setText("Data Quitação");

        try {
            jftDtQuitacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftDtQuitacao.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jftDtQuitacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftDtQuitacaoFocusLost(evt);
            }
        });

        lblNumDocumento.setText("Núm. Documento");

        txtNumDocumento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblEspDocumento.setText("Esp. Documento");

        jcbEspDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEspDocumentoActionPerformed(evt);
            }
        });

        lblVlDocumento.setText("R$ Documento");

        lblTpPagto.setText("Tipo de Pagamento");

        jcbTpPagto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTpPagtoActionPerformed(evt);
            }
        });

        lblFormaPagto.setText("Forma de Pagamento");

        jcbFormaPagto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFormaPagtoActionPerformed(evt);
            }
        });

        lblTxJuros.setText("Taxa de Juros");

        lblTpFormaPagto.setText("Forma de Cobrança");

        jcbTpFormaCobranca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTpFormaCobrancaActionPerformed(evt);
            }
        });

        jrbTpTaxaJuros.setSelected(true);
        jrbTpTaxaJuros.setText("Real / Percentual");
        jrbTpTaxaJuros.setToolTipText("Taxa de juros em percentual clique aqui.");

        lblTxMulta.setText("Taxa de Multa");

        jrbTpTaxaMulta.setSelected(true);
        jrbTpTaxaMulta.setText("Real / Percentual");
        jrbTpTaxaMulta.setToolTipText("Taxa de multa em percentual clique aqui.");
        jrbTpTaxaMulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTpTaxaMultaActionPerformed(evt);
            }
        });

        lblFormaPagtoDescricao.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblFormaPagtoDescricao.setMaximumSize(new java.awt.Dimension(36, 20));
        lblFormaPagtoDescricao.setMinimumSize(new java.awt.Dimension(36, 20));
        lblFormaPagtoDescricao.setPreferredSize(new java.awt.Dimension(36, 20));

        lblEspDocumentoDescicao.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblEspDocumentoDescicao.setMaximumSize(new java.awt.Dimension(36, 20));
        lblEspDocumentoDescicao.setMinimumSize(new java.awt.Dimension(36, 20));
        lblEspDocumentoDescicao.setPreferredSize(new java.awt.Dimension(36, 20));

        lblTpPagtoDescricao.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblTpPagtoDescricao.setMaximumSize(new java.awt.Dimension(36, 20));
        lblTpPagtoDescricao.setMinimumSize(new java.awt.Dimension(36, 20));
        lblTpPagtoDescricao.setPreferredSize(new java.awt.Dimension(36, 20));

        lblFormaCobrancaJurosDescricao.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblFormaCobrancaJurosDescricao.setMaximumSize(new java.awt.Dimension(36, 20));
        lblFormaCobrancaJurosDescricao.setMinimumSize(new java.awt.Dimension(36, 20));
        lblFormaCobrancaJurosDescricao.setPreferredSize(new java.awt.Dimension(36, 20));

        lblVlPagar.setText("Valor a Pagar");

        txtVlPagar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtVlPagar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtVlPagarFocusGained(evt);
            }
        });

        lblCodBarras.setText("Código de Barras");

        txtCodBarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodBarraActionPerformed(evt);
            }
        });

        jftTaxaJuros.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jftTaxaJuros.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jftTaxaJuros.setMaximumSize(new java.awt.Dimension(23, 23));

        jftVlDocumento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jftVlDocumento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jftVlDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftVlDocumentoActionPerformed(evt);
            }
        });

        jftTxMulta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jftTxMulta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jcbCredor.setMaximumSize(new java.awt.Dimension(28, 20));
        jcbCredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCredorActionPerformed(evt);
            }
        });

        jpBotao.setMaximumSize(new java.awt.Dimension(130, 200));
        jpBotao.setMinimumSize(new java.awt.Dimension(130, 200));
        jpBotao.setPreferredSize(new java.awt.Dimension(130, 200));

        btoIncluir.setText("Incluir");
        btoIncluir.setToolTipText("Incluir nova conta");
        btoIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoIncluirActionPerformed(evt);
            }
        });

        btoSalvar.setText("Salvar");
        btoSalvar.setToolTipText("Salva a nova conta");
        btoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoSalvarActionPerformed(evt);
            }
        });

        btoAtualizar.setText("Atualizar");
        btoAtualizar.setToolTipText("Atualiza uma conta");
        btoAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoAtualizarActionPerformed(evt);
            }
        });

        btoExcluir.setText("Excluir");
        btoExcluir.setToolTipText("Exclui uma conta");
        btoExcluir.setPreferredSize(new java.awt.Dimension(61, 23));
        btoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotaoLayout = new javax.swing.GroupLayout(jpBotao);
        jpBotao.setLayout(jpBotaoLayout);
        jpBotaoLayout.setHorizontalGroup(
            jpBotaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btoExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btoAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btoSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btoIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpBotaoLayout.setVerticalGroup(
            jpBotaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btoIncluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btoSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btoAtualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btoExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        jpLista.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Visualização das Contas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 10), new java.awt.Color(0, 0, 102))); // NOI18N
        jpLista.setToolTipText("Visualização das Contas");

        jLabel17.setText("Data Início");

        try {
            jftDtInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftDtInicio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jftDtInicio.setToolTipText("Data de Vencimento");
        jftDtInicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftDtInicioFocusLost(evt);
            }
        });

        lblCodContaList.setText("Código da Conta");

        txtCodContaList.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblDtFinal.setText("Data Final");

        try {
            jftDtFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftDtFinal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jftDtFinal.setToolTipText("Data de Vencimento");
        jftDtFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftDtFinalFocusLost(evt);
            }
        });

        lblCredorList.setText("Credor");

        btoLocalizar.setText("Localizar");
        btoLocalizar.setToolTipText("Localiza contas");
        btoLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoLocalizarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Conta", "Credor", "Data Documento", "Núm Documento", "Data Vencimento", "Valor a Pagar", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        } );
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jpListaLayout = new javax.swing.GroupLayout(jpLista);
        jpLista.setLayout(jpListaLayout);
        jpListaLayout.setHorizontalGroup(
            jpListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpListaLayout.createSequentialGroup()
                        .addGroup(jpListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpListaLayout.createSequentialGroup()
                                .addComponent(lblCodContaList)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodContaList, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jftDtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(lblDtFinal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jftDtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpListaLayout.createSequentialGroup()
                                .addComponent(lblCredorList)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcbCredorList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(btoLocalizar))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jpListaLayout.setVerticalGroup(
            jpListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpListaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jpListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodContaList)
                    .addComponent(txtCodContaList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jftDtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDtFinal)
                    .addComponent(jftDtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbCredorList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btoLocalizar))
                    .addComponent(lblCredorList, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout jpCamposLayout = new javax.swing.GroupLayout(jpCampos);
        jpCampos.setLayout(jpCamposLayout);
        jpCamposLayout.setHorizontalGroup(
            jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpCamposLayout.createSequentialGroup()
                        .addComponent(lblNumDocumento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEspDocumento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbEspDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEspDocumentoDescicao, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblVlDocumento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jftVlDocumento))
                    .addGroup(jpCamposLayout.createSequentialGroup()
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCod)
                            .addComponent(lblCredor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCodConta, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbCredor, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpCamposLayout.createSequentialGroup()
                                .addComponent(jrbTpTitulo)
                                .addGap(68, 68, 68)
                                .addComponent(lblSituacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcbSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblCredorNome, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpCamposLayout.createSequentialGroup()
                        .addComponent(lblTpPagto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbTpPagto, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTpPagtoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblFormaPagto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbFormaPagto, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFormaPagtoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpCamposLayout.createSequentialGroup()
                        .addComponent(lblDtDocumento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jftDtDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lvlDtVencimento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jftDtVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDtQuitacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jftDtQuitacao, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpCamposLayout.createSequentialGroup()
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpCamposLayout.createSequentialGroup()
                                .addComponent(lblTxMulta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jftTxMulta, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jrbTpTaxaMulta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblVlPagar))
                            .addGroup(jpCamposLayout.createSequentialGroup()
                                .addComponent(lblTxJuros)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jftTaxaJuros, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTpFormaPagto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbTpFormaCobranca, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblFormaCobrancaJurosDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbTpTaxaJuros)
                            .addComponent(txtVlPagar)))
                    .addGroup(jpCamposLayout.createSequentialGroup()
                        .addComponent(lblCodBarras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jpCamposLayout.createSequentialGroup()
                .addComponent(jpLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jpCamposLayout.setVerticalGroup(
            jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCamposLayout.createSequentialGroup()
                .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCamposLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrbTpTitulo)
                            .addComponent(lblCodConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCod)
                            .addComponent(lblSituacao)
                            .addComponent(jcbSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCredor)
                            .addComponent(jcbCredor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCredorNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jftDtDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDtDocumento)
                            .addComponent(lvlDtVencimento)
                            .addComponent(jftDtVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDtQuitacao)
                            .addComponent(jftDtQuitacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNumDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNumDocumento)
                            .addComponent(lblEspDocumento)
                            .addComponent(jcbEspDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblVlDocumento)
                            .addComponent(lblEspDocumentoDescicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jftVlDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblTpPagtoDescricao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbTpPagto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbFormaPagto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblTpPagto)
                                .addComponent(lblFormaPagto))
                            .addComponent(lblFormaPagtoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFormaCobrancaJurosDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblTxJuros)
                                .addComponent(jftTaxaJuros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTpFormaPagto)
                                .addComponent(jcbTpFormaCobranca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jrbTpTaxaJuros))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTxMulta)
                            .addComponent(jftTxMulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jrbTpTaxaMulta)
                            .addComponent(lblVlPagar)
                            .addComponent(txtVlPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCodBarras)
                            .addComponent(txtCodBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jpBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpLista, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        lblCod.getAccessibleContext().setAccessibleName("lblCodigo");
        jrbTpTitulo.getAccessibleContext().setAccessibleName("jrbTitulo");
        lblCodConta.getAccessibleContext().setAccessibleName("lblCodConta");
        lblSituacao.getAccessibleContext().setAccessibleName("lblSituacao");
        jcbSituacao.getAccessibleContext().setAccessibleName("jcbSituacao");
        lblCredor.getAccessibleContext().setAccessibleName("lblCredor");
        lblCredorNome.getAccessibleContext().setAccessibleName("lblCredorNome");
        lblDtDocumento.getAccessibleContext().setAccessibleName("lblDtDocumento");
        jftDtDocumento.getAccessibleContext().setAccessibleName("jftDtDocumento");
        lvlDtVencimento.getAccessibleContext().setAccessibleName("lblDtVencimento");
        jftDtVencimento.getAccessibleContext().setAccessibleName("jftDtVencimento");
        lblDtQuitacao.getAccessibleContext().setAccessibleName("lblDtQuitacao");
        jftDtQuitacao.getAccessibleContext().setAccessibleName("jftDtQuitacao");
        lblNumDocumento.getAccessibleContext().setAccessibleName("lblNumDocumento");
        txtNumDocumento.getAccessibleContext().setAccessibleName("txtNumDocumento");
        lblEspDocumento.getAccessibleContext().setAccessibleName("lblEspDocumento");
        jcbEspDocumento.getAccessibleContext().setAccessibleName("jcbEspDocumento");
        lblVlDocumento.getAccessibleContext().setAccessibleName("lblVlDocumento");

        getContentPane().add(jpCampos, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrbTpTaxaMultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTpTaxaMultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbTpTaxaMultaActionPerformed

    private void btoIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoIncluirActionPerformed
        btoIncluir.setEnabled(false);btoSalvar.setEnabled(true);btoAtualizar.setEnabled(false);btoExcluir.setEnabled(false);
        
        ContasPagarVO cpVO; ContasPagarDAO cpDao = null;
        try {
            cpVO = new ContasPagarVO();
            cpDao = new ContasPagarDAO();
            //Metodo que controla o id do cantas a pagar
             cpVO = cpDao.controlarContasPagarPk(cpVO);
             String id = String.valueOf(cpVO.getContasPagarPk());
             if(!id.isEmpty() && id != "null"){
                lblCodConta.setText(String.valueOf(cpVO.getContasPagarPk()+1));
             }else{
                lblCodConta.setText(String.valueOf(1));
             }
            //Seta a combo situacao para iniciar um lancamento
             jcbSituacao.setSelectedItem("A vencer");
            //limpaCampos();
        } catch (ParseException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        } finally{
            try {
                cpDao.closeContasPagarDAO();
                
                modelo = (DefaultTableModel) this.jTable1.getModel();
                modelo.setNumRows(0);
                
            } catch ( SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btoIncluirActionPerformed

    private void jcbFormaPagtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFormaPagtoActionPerformed
        FormaPagtoVO fpVO = new FormaPagtoVO();
        int formaPg = (String.valueOf(jcbFormaPagto.getSelectedItem()).equals("null") ? 0 : Integer.valueOf(jcbFormaPagto.getSelectedItem().toString()) );
        fpVO.setCodForma(formaPg);
        if(jcbFormaPagto.getSelectedItem() == null ){//fpVO.getCodForma() == 0){// || String.valueOf(fpVO.getCodForma()) == "null" ){
            lblFormaPagtoDescricao.setText("");
        }else{
            ContasPagarDAO cpDao=null;
            try {
                cpDao = new ContasPagarDAO();
                fpVO = cpDao.buscarDescricaoFormaPagtoByCodForma(fpVO);
                lblFormaPagtoDescricao.setText( fpVO.getDescricao() );
            } catch (ParseException | SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            } finally{
                try {
                    cpDao.closeContasPagarDAO();
                } catch ( SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jcbFormaPagtoActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void jcbEspDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEspDocumentoActionPerformed
        EspecieDocumentoVO edVO = new EspecieDocumentoVO();
        String codEspecDoc = String.valueOf(jcbEspDocumento.getSelectedItem());
        edVO.setCodEspDocumento(codEspecDoc);
        if(edVO.getCodEspDocumento() == "null"){
            lblEspDocumentoDescicao.setText("");
        }else{
            ContasPagarDAO cpDao=null;
            try {
                cpDao = new ContasPagarDAO();
                edVO = cpDao.buscarEspecieDocumentoDescricaoByPk(edVO);
                lblEspDocumentoDescicao.setText( edVO.getDescricao() );
            } catch (ParseException | SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    cpDao.closeContasPagarDAO();
                } catch (        SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jcbEspDocumentoActionPerformed

    private void jcbTpPagtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTpPagtoActionPerformed
        TipoPagtoVO tpVO = new TipoPagtoVO();
        String tpPagto = String.valueOf(jcbTpPagto.getSelectedItem());
        tpVO.setCodTpPagto(tpPagto);
        if(tpVO.getCodTpPagto()=="null"){
            lblTpPagtoDescricao.setText("");
        }else{
            ContasPagarDAO cpDao=null;
            try {
                cpDao = new ContasPagarDAO();
                tpVO = cpDao.buscarTipoPagtoDescricaoByPk(tpVO);
                lblTpPagtoDescricao.setText( tpVO.getDescricao() );
            } catch (ParseException | SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    cpDao.closeContasPagarDAO();
                } catch ( SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jcbTpPagtoActionPerformed

    private void jcbTpFormaCobrancaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTpFormaCobrancaActionPerformed
        FormaCobrancaJurosVO fcjVO = new FormaCobrancaJurosVO();
        java.lang.String combo = String.valueOf(jcbTpFormaCobranca.getSelectedItem());
        fcjVO.setCodFormaCobrancaJuros(combo);
        if(fcjVO.getCodFormaCobrancaJuros()=="null"){
            lblFormaCobrancaJurosDescricao.setText("");
        }else{
            ContasPagarDAO cpDao=null;
            try {
                cpDao = new ContasPagarDAO();

                fcjVO = cpDao.buscarFormaCobrancaJurosByCod(fcjVO);   
                lblFormaCobrancaJurosDescricao.setText( fcjVO.getDescricao() );

            } catch (ParseException | SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    cpDao.closeContasPagarDAO();
                } catch ( SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jcbTpFormaCobrancaActionPerformed

    private void btoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoSalvarActionPerformed
        ContasPagar1VO cpVO; ContasPagarDAO cpDao=null;
        try {
            cpVO = new ContasPagar1VO();
            
            cpVO.setJcbEspDocumento(jcbEspDocumento.getSelectedItem().toString());
            cpVO.setJcbFormaPagto(Integer.valueOf(jcbFormaPagto.getSelectedItem().toString()));
            cpVO.setJcbSituacao(jcbSituacao.getSelectedItem().toString());
            cpVO.setJcbTpFormaCobranca(jcbTpFormaCobranca.getSelectedItem().toString());
            cpVO.setJcbTpPagto(jcbTpPagto.getSelectedItem().toString());
            cpVO.setJftDtDocumento("  /  /    ".equals(jftDtDocumento.getText()) ? "null" : jftDtDocumento.getText());
            cpVO.setJftDtQuitacao("  /  /    ".equals(jftDtQuitacao.getText()) ? "null" : jftDtQuitacao.getText());
            cpVO.setJftDtVencimento("  /  /    ".equals(jftDtVencimento.getText()) ? "null" : jftDtVencimento.getText());
            cpVO.setJrbTpTaxaJuros(jrbTpTaxaJuros.isSelected() ? "1" : "0");
            cpVO.setJrbTpTaxaMulta(jrbTpTaxaMulta.isSelected() ? "1" : "0" );
            cpVO.setJrbTpTitulo(jrbTpTitulo.isSelected() ? "1" : "0");
            cpVO.setTxtCredor(jcbCredor.getSelectedItem().toString().substring(0, jcbCredor.getSelectedItem().toString().indexOf("-") ));
            cpVO.setTxtNumDocumento(txtNumDocumento.getText());
            cpVO.setTxtTxJuros(jftTaxaJuros.getText()=="null" ? "0.00" : jftTaxaJuros.getText() );
            cpVO.setTxtTxMulta(jftTxMulta.getText()=="null" ? "0.00" : jftTxMulta.getText() );
            cpVO.setTxtVlDocumento(jftVlDocumento.getText()=="null" ? "0.00" : jftVlDocumento.getText());
            cpVO.setTxtCodBarra(txtCodBarra.getText());
            cpVO.setTxtVlPagar(txtVlPagar.getText()=="null" ? "0.00" : txtVlPagar.getText());
        
            cpDao = new ContasPagarDAO();
            if(Integer.valueOf(cpVO.getJcbFormaPagto().toString()) <= 1){
                cpDao.salvarContasPagar(cpVO);
            }else{
                cpDao.salvarContasPagarParcelas(cpVO);
            }
            
        } catch (ParseException | SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            try {
                cpDao.closeContasPagarDAO();
                limpaCampos();
                btoIncluir.setEnabled(true);btoAtualizar.setEnabled(false);btoExcluir.setEnabled(false);
                btoSalvar.setEnabled(false);
            } catch ( SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btoSalvarActionPerformed

    private void btoLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoLocalizarActionPerformed
        ContasPagarDAO cpDao=null; ContasPagar1VO cpVO = null;
        List<ContasPagar1VO> dados = new ArrayList<ContasPagar1VO>();
        //DefaultTableModel modelo;
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();  
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();  
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();  
  
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);  
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);  
        direita.setHorizontalAlignment(SwingConstants.RIGHT);  
  
        ConvertStringToDate conStringToData = null;
        FormataValor fv = null;
        java.util.Date data=null;
        //Busca registro conforme codigo da conta
        if(!"".equals(txtCodContaList.getText())){
            try {
                cpDao = new ContasPagarDAO();
                conStringToData = new ConvertStringToDate(); fv = new FormataValor();
                dados = cpDao.carregaJTableContasPagarByCodigo(Integer.valueOf(txtCodContaList.getText()));
                
                modelo = (DefaultTableModel) this.jTable1.getModel();
                modelo.setNumRows(0);
                for(ContasPagar1VO cp: dados){
                    try {
                        modelo.addRow(new String[]{String.valueOf(cp.getLblContasPagarPk()), (cp.getTxtCredor()+"-"+cp.getNomeCredor()), conStringToData.convertStringToData(cp.getJftDtDocumento()) , cp.getTxtNumDocumento(), conStringToData.convertStringToData(cp.getJftDtVencimento()), fv.formatValor(cp.getTxtVlPagar()), cp.getJcbSituacao() } );
                    } catch (ParseException ex) {
                        Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                jTable1.getColumnModel().getColumn(0).setCellRenderer(direita);  
                jTable1.getColumnModel().getColumn(1).setCellRenderer(esquerda);  
                jTable1.getColumnModel().getColumn(2).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(3).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(4).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(5).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(6).setCellRenderer(esquerda);
                
                jTable1.setModel(modelo);
                txtCodContaList.setText("");
            } catch ( SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    cpDao.closeContasPagarDAO();
                } catch ( SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        //Busca registro conforme periodo por data de vencimento
        if(!jftDtInicio.getText().equals("  /  /    ") && !jftDtFinal.getText().equals("  /  /    ")){
            try {
                cpVO = new ContasPagar1VO();
                conStringToData = new ConvertStringToDate(); fv = new FormataValor();
                try {
                    cpVO.setDataInicio(conStringToData.convertStringToDates(jftDtInicio.getText()));
                    cpVO.setDataFim(conStringToData.convertStringToDates(jftDtFinal.getText()));
                } catch (ParseException ex) {
                    Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                }                
                cpDao = new ContasPagarDAO();
                dados = cpDao.carregaJTableContasPagarByPeriodoVencimento(cpVO);
                
                modelo = (DefaultTableModel) this.jTable1.getModel();
                modelo.setNumRows(0);
                for(ContasPagar1VO cp : dados){
                    try {
                        modelo.addRow(new String[]{String.valueOf(cp.getLblContasPagarPk()), (cp.getTxtCredor()+"-"+cp.getNomeCredor()), conStringToData.convertStringToData(cp.getJftDtDocumento()) , cp.getTxtNumDocumento(), conStringToData.convertStringToData(cp.getJftDtVencimento()), fv.formatValor(cp.getTxtVlPagar()), cp.getJcbSituacao() } );
                    } catch (ParseException ex) {
                        Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                jTable1.getColumnModel().getColumn(0).setCellRenderer(direita);  
                jTable1.getColumnModel().getColumn(1).setCellRenderer(esquerda);  
                jTable1.getColumnModel().getColumn(2).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(3).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(4).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(5).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(6).setCellRenderer(esquerda);

                jTable1.setModel(modelo);//"  /  /    "
                //jftDtInicio.setText(null);jftDtFinal.setText(null);
            } catch ( SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    cpDao.closeContasPagarDAO();
                } catch ( SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
        }
        //Busca registro conforme o nome do credor
        if(jcbCredorList.getSelectedItem() != null){
            
        }
        //Busca registro conforme periodo e nome do credor
        if(!jftDtInicio.getText().equals("  /  /    ") && !jftDtFinal.getText().equals("  /  /    ") && jcbCredorList.getSelectedItem() != null){
           try {
                cpVO = new ContasPagar1VO();
                conStringToData = new ConvertStringToDate();
                try {
                    cpVO.setDataInicio(conStringToData.convertStringToDates(jftDtInicio.getText()));
                    cpVO.setDataFim(conStringToData.convertStringToDates(jftDtFinal.getText()));
                    cpVO.setNomeCredor(jcbCredorList.getSelectedItem().toString().substring(jcbCredorList.getSelectedItem().toString().indexOf("-")).replace("-", "").trim());
                } catch (ParseException ex) {
                    Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                }                
                cpDao = new ContasPagarDAO();
                dados = cpDao.carregaJTableContasPagarByVencimentoAndCredor(cpVO);
                
                modelo = (DefaultTableModel) this.jTable1.getModel();
                modelo.setNumRows(0);
                for(ContasPagar1VO cp : dados){
                    try {
                        modelo.addRow(new String[]{String.valueOf(cp.getLblContasPagarPk()), (cp.getTxtCredor()+"-"+cp.getNomeCredor()), conStringToData.convertStringToData(cp.getJftDtDocumento()) , cp.getTxtNumDocumento(), conStringToData.convertStringToData(cp.getJftDtVencimento()), fv.formatValor(cp.getTxtVlPagar()), cp.getJcbSituacao() } );
                    } catch (ParseException ex) {
                        Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                jTable1.getColumnModel().getColumn(0).setCellRenderer(direita);  
                jTable1.getColumnModel().getColumn(1).setCellRenderer(esquerda);  
                jTable1.getColumnModel().getColumn(2).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(3).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(4).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(5).setCellRenderer(direita);
                jTable1.getColumnModel().getColumn(6).setCellRenderer(esquerda);

                jTable1.setModel(modelo);
                //jftDtInicio.setText("  /  /    ");jftDtFinal.setText("  /  /    ");jcbCredorList.setSelectedItem(null);
               } catch ( SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
               }finally{
                    try {
                        cpDao.closeContasPagarDAO();
                    } catch ( SQLException | ClassNotFoundException ex) {
                        Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
        }
    }//GEN-LAST:event_btoLocalizarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int linha = jTable1.getSelectedRow();
        ContasPagar1VO cpVO = new ContasPagar1VO();
        cpVO.setTxtCodContaList(String.valueOf( jTable1.getValueAt(linha, 0)));
        ConvertStringToDate convSTD = null; FormataValor fv = null;
        ContasPagarDAO cpDao=null;
        try {
            cpDao = new ContasPagarDAO();
            convSTD = new ConvertStringToDate();
            fv = new FormataValor();
            cpVO = cpDao.buscarContasPagarByPk(cpVO);
            
            lblCodConta.setText(cpVO.getLblCodConta());
            jcbCredorList.setSelectedItem(String.valueOf(cpVO.getTxtCredor()));
            jcbEspDocumento.setSelectedItem(String.valueOf(cpVO.getJcbEspDocumento()));
            jcbFormaPagto.setSelectedItem(cpVO.getJcbFormaPagto());
            jcbSituacao.setSelectedItem(cpVO.getJcbSituacao());
            jcbTpFormaCobranca.setSelectedItem(cpVO.getJcbTpFormaCobranca());
            jcbTpPagto.setSelectedItem(cpVO.getJcbTpPagto());
            jftDtDocumento.setText(convSTD.convertStringToData(cpVO.getJftDtDocumento()));
            //jftDtFinal.setText(cpVO.getJftDtFinal());
            //jftDtInicio.setText(cpVO.getJftDtFinal());
            jftDtQuitacao.setText(convSTD.convertStringToData(cpVO.getJftDtQuitacao()));
            jftDtVencimento.setText(convSTD.convertStringToData(cpVO.getJftDtVencimento()));
            jrbTpTaxaJuros.setSelected("1".equals(cpVO.getJrbTpTaxaMulta()) ? true : false);
            jrbTpTaxaMulta.setSelected("1".equals(cpVO.getJrbTpTaxaMulta()) ? true : false);
            jrbTpTitulo.setSelected("1".equals(cpVO.getJrbTpTitulo()) ? true : false);
//            txtCodContaList.setText(cpVO.getTxtCodContaList());
            //jcbCredor.addItem(cpVO.getTxtCredor()+" - "+cpVO.getNomeCredor());
            jcbCredor.setSelectedItem(cpVO.getTxtCredor()+" - "+cpVO.getNomeCredor());
            lblCredorNome.setText(cpVO.getNomeCredor());
            txtNumDocumento.setText(cpVO.getTxtNumDocumento());
            jftTaxaJuros.setText(fv.formatValor(cpVO.getTxtTxJuros()));
            jftTxMulta.setText(fv.formatValor(cpVO.getTxtTxMulta()));
            jftVlDocumento.setText(fv.formatValor(cpVO.getTxtVlDocumento()));
            txtVlPagar.setText(fv.formatValor(cpVO.getTxtVlPagar()));
            
            btoIncluir.setEnabled(true);btoSalvar.setEnabled(false);
            btoAtualizar.setEnabled(true);btoExcluir.setEnabled(true);
            
        } catch (ParseException | SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        } finally{
            try {
                cpDao.closeContasPagarDAO();
            } catch ( SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jftDtDocumentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftDtDocumentoFocusLost
//        if(!"".equals(jftDtDocumento.getText().replace("/","").trim())){
        if(!"  /  /    ".equals(jftDtDocumento.getText())){
            ValidaData vd = new ValidaData();
            boolean isData = vd.validarData(jftDtDocumento.getText());
            if(!isData){
                JOptionPane.showMessageDialog(this, "Data do documento não é válida.");
                jftDtDocumento.setFocusable(true);
            }
        }
    }//GEN-LAST:event_jftDtDocumentoFocusLost

    private void jftDtVencimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftDtVencimentoFocusLost
//        if(!"".equals(jftDtVencimento.getText().replace("/","").trim())){
        if(!"  /  /    ".equals(jftDtVencimento.getText())){
            ValidaData vd = new ValidaData();
            boolean isData = vd.validarData(jftDtVencimento.getText());
            if(!isData){
                JOptionPane.showMessageDialog(this, "Data de vencimento não é válida.");
                jftDtVencimento.setFocusable(true);
            }
        }
    }//GEN-LAST:event_jftDtVencimentoFocusLost

    private void jftDtQuitacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftDtQuitacaoFocusLost
        ValidaData vd = new ValidaData();
        if(!"  /  /    ".equals(jftDtQuitacao.getText())){
            boolean isData = vd.validarData(jftDtQuitacao.getText());
            if(!isData){
                JOptionPane.showMessageDialog(this, "Data de quitação não é válida.");
                jftDtQuitacao.setFocusable(true);
            }
        }
    }//GEN-LAST:event_jftDtQuitacaoFocusLost

    private void jftDtInicioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftDtInicioFocusLost
        ValidaData vd = new ValidaData();
        if(!"  /  /    ".equals(jftDtInicio.getText())){
            boolean isData = vd.validarData(jftDtInicio.getText());
            if(!isData){
                JOptionPane.showMessageDialog(this, "Data de início não é válida.");
                jftDtInicio.setFocusable(true);
            }
        }
    }//GEN-LAST:event_jftDtInicioFocusLost

    private void jftDtFinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftDtFinalFocusLost
        ValidaData vd = new ValidaData();
        if(!"  /  /    ".equals(jftDtFinal.getText())){
            boolean isData = vd.validarData(jftDtFinal.getText());
            if(!isData){
                JOptionPane.showMessageDialog(this, "Data final não é válida.");
                jftDtFinal.setFocusable(true);
            }
        }
    }//GEN-LAST:event_jftDtFinalFocusLost

    private void txtVlPagarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVlPagarFocusGained
        if(jcbFormaPagto.getSelectedItem() == null ){
            JOptionPane.showMessageDialog(this, "Preencher a forma de pagamento.");
            jcbFormaPagto.requestFocus();
        }else if(jcbFormaPagto.getSelectedItem().toString().equals("0") && !"".equals(jftVlDocumento.getText())){
            FormataValor fv = new FormataValor();
            java.lang.Double vlDocumento = Double.valueOf(jftVlDocumento.getText().replace(".","").replace(",","."));
            txtVlPagar.setText(fv.decimalFormat(String.valueOf(vlDocumento)));
        }else if(!jcbFormaPagto.getSelectedItem().toString().equals("0") && !"".equals(jftVlDocumento.getText())){
            FormataValor fv = new FormataValor();
            java.lang.Double vlDocumento = Double.valueOf(jftVlDocumento.getText().replace(".","").replace(",","."));
            java.lang.Integer formaPagto = Integer.valueOf(jcbFormaPagto.getSelectedItem().toString());
            txtVlPagar.setText(fv.decimalFormat(String.valueOf(vlDocumento/formaPagto)));
        }
    }//GEN-LAST:event_txtVlPagarFocusGained

    private void jftVlDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftVlDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftVlDocumentoActionPerformed

    private void txtCodBarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodBarraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodBarraActionPerformed

    private void btoAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoAtualizarActionPerformed
        ContasPagar1VO cpVO; ContasPagarDAO cpDao=null;
        try {
            cpVO = new ContasPagar1VO();
            
            cpVO.setLblCodConta(lblCodConta.getText());
            cpVO.setJcbEspDocumento(jcbEspDocumento.getSelectedItem().toString());
            cpVO.setJcbFormaPagto(Integer.valueOf(jcbFormaPagto.getSelectedItem().toString()));
            cpVO.setJcbSituacao(jcbSituacao.getSelectedItem().toString());
            cpVO.setJcbTpFormaCobranca(jcbTpFormaCobranca.getSelectedItem().toString());
            cpVO.setJcbTpPagto(jcbTpPagto.getSelectedItem().toString());
            cpVO.setJftDtDocumento(jftDtDocumento.getText());
            cpVO.setJftDtQuitacao(jftDtQuitacao.getText());
            cpVO.setJftDtVencimento(jftDtVencimento.getText());
            cpVO.setJrbTpTaxaJuros(jrbTpTaxaJuros.isSelected() ? "1" : "0");
            cpVO.setJrbTpTaxaMulta(jrbTpTaxaMulta.isSelected() ? "1" : "0" );
            cpVO.setJrbTpTitulo(jrbTpTitulo.isSelected() ? "1" : "0");
            cpVO.setTxtCredor(jcbCredor.getSelectedItem().toString().substring(0, jcbCredor.getSelectedItem().toString().indexOf("-")).trim());
            cpVO.setTxtNumDocumento(txtNumDocumento.getText());
            cpVO.setTxtTxJuros(jftTaxaJuros.getText()=="null" ? "0.00" : jftTaxaJuros.getText() );
            cpVO.setTxtTxMulta(jftTxMulta.getText()=="null" ? "0.00" : jftTxMulta.getText() );
            cpVO.setTxtVlDocumento(jftVlDocumento.getText()=="null" ? "0.00" : jftVlDocumento.getText());
            cpVO.setTxtCodBarra("");
            cpVO.setTxtVlPagar(txtVlPagar.getText()=="null" ? "0.00" : txtVlPagar.getText());
        
            cpDao = new ContasPagarDAO();
            cpDao.updateContasPagar(cpVO);
                       
        } catch (ParseException | SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            try {
                cpDao.closeContasPagarDAO();
                limpaCampos();
                
                btoLocalizar.doClick();
                
                btoIncluir.setEnabled(true);btoAtualizar.setEnabled(false);btoExcluir.setEnabled(false);
                btoSalvar.setEnabled(false);
            } catch ( SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btoAtualizarActionPerformed

    private void jcbCredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCredorActionPerformed
        java.lang.String txt=null, nomeCredor=null, codigoCredor=null;
        if(jcbCredor.getSelectedItem() != null && jcbCredor.getSelectedItem().toString().length() > 4){
            txt = jcbCredor.getSelectedItem().toString();
            codigoCredor = txt.substring(0, txt.indexOf("-")).trim();
            nomeCredor = txt.substring(txt.indexOf("-")).replace("-","").trim();
            //jcbCredor.addItem(codigoCredor);
            //jcbCredor.setSelectedItem(codigoCredor);
            lblCredorNome.setText(nomeCredor);
        }
    }//GEN-LAST:event_jcbCredorActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        btoSalvar.setEnabled(false);btoAtualizar.setEnabled(false);btoExcluir.setEnabled(false);
        ContasPagarDAO cpDao=null; ConvertStringToDate cv; java.util.Date data;//GregorianCalendar cal;
        List<FormaPagtoVO> fpList; List<TipoPagtoVO> tpList; List<EspecieDocumentoVO> edList;
        List<SituacaoVO> stList;List<FormaCobrancaJurosVO> fcjList; 
        
        List<CadFornecedorVO> fornecedorList; CadFornecedorDAO fornecedorDao=null;
        try {
            //Carrega combo Credor
        	fornecedorDao = new CadFornecedorDAO();
        	fornecedorList = fornecedorDao.getAllFornecedor();
            jcbCredor.addItem(null);jcbCredorList.addItem(null);
            if(!fornecedorList.equals(null))
            for(CadFornecedorVO fornecedor : fornecedorList){
                jcbCredor.addItem(fornecedor.getFornecedorPk()+" - "+fornecedor.getNome());
                jcbCredorList.addItem(fornecedor.getFornecedorPk()+" - "+fornecedor.getNome());
            }
            //Codigo que carrega o campo data documento com a data atual do SO.
            data = new Date();
            cv = new ConvertStringToDate();
            jftDtDocumento.setText(cv.convertStringToData((data.getYear()+1900)+"-"+((data.getMonth()+1)<10 ? "0"+String.valueOf(data.getMonth()+1) : data.getMonth()+1 )+"-"+(data.getDate()<10 ? "0"+String.valueOf(data.getDate()) : data.getDate()) ));
            //Codigo para cerregar as combos da tela
            cpDao = new ContasPagarDAO();
            fpList = new ArrayList(); tpList = new ArrayList(); edList = new ArrayList();
            //Carrega combo Forma de Pagto
            fpList = cpDao.buscarFormaPagto();
            jcbFormaPagto.addItem(null);
            for(FormaPagtoVO formas : fpList){
                jcbFormaPagto.addItem(formas.getCodForma());
            }
            //Carrega combo Tipo de Pagto
            tpList = cpDao.buscarTipoPagto();
            jcbTpPagto.addItem(null);
            for(TipoPagtoVO tiposPg : tpList){
                jcbTpPagto.addItem(tiposPg.getCodTpPagto());
            }
            //Carrega combo Especie de documento
            edList = cpDao.buscarEspecieDocumento();
            jcbEspDocumento.addItem(null);
            for(EspecieDocumentoVO especies : edList){
                jcbEspDocumento.addItem(especies.getCodEspDocumento());
            }
            //Carrega combo Situacao
            stList = cpDao.buscarSituacaoContasPagar();
            jcbSituacao.addItem(null);
            for(SituacaoVO situacoes : stList){
                jcbSituacao.addItem(situacoes.getDescricao());
            }
            //Carrega combo forma de cobranca
            fcjList = cpDao.buscarFormaCobrancaJuros();
            jcbTpFormaCobranca.addItem(null);
            for(FormaCobrancaJurosVO fCobranca : fcjList){
                jcbTpFormaCobranca.addItem(fCobranca.getCodFormaCobrancaJuros());
            }
                
        } catch (ParseException | SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            try {
                cpDao.closeContasPagarDAO();
            } catch ( SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        jcbCredor.removeAllItems(); jcbCredorList.removeAllItems();
        jftDtDocumento.setText(""); jcbFormaPagto.removeAllItems();
        jcbTpPagto.removeAllItems(); jcbEspDocumento.removeAllItems();
        jcbSituacao.removeAllItems(); jcbTpFormaCobranca.removeAllItems();

    }//GEN-LAST:event_formInternalFrameClosing

    private void btoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoExcluirActionPerformed
        ContasPagarVO cpVO = null; ContasPagarDAO cpDao = null;
        try {
            cpVO = new ContasPagarVO();
            cpVO.setContasPagarPk(Integer.valueOf(lblCodConta.getText()));

            cpDao = new ContasPagarDAO();
            cpDao.deleteContasPagar(cpVO);
            //Chama mÃ©todo recursivammente para carregar o grid com a exclusao
            btoLocalizar.doClick();
        } catch (SQLException | ClassNotFoundException | ParseException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        } finally{
            try {
                cpDao.closeContasPagarDAO();
                limpaCampos();
                btoIncluir.setEnabled(true);btoAtualizar.setEnabled(false);btoExcluir.setEnabled(false);
                btoSalvar.setEnabled(false);
            } catch ( SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btoExcluirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btoAtualizar, btoExcluir, btoIncluir, btoLocalizar, btoSalvar;
    
    private javax.swing.JScrollPane jScrollPane1;
    
    private javax.swing.JTable jTable1;
    
    private DefaultTableModel modelo;
    
    private javax.swing.JComboBox jcbCredor, jcbCredorList, jcbEspDocumento, jcbFormaPagto, jcbSituacao, jcbTpFormaCobranca, jcbTpPagto; 

    private javax.swing.JFormattedTextField jftDtDocumento, jftDtFinal, jftDtInicio, jftDtQuitacao, jftDtVencimento, jftTaxaJuros,
    jftTxMulta, jftVlDocumento;
    
    private javax.swing.JPanel jpBotao, jpCampos, jpLista;
    
    private javax.swing.JRadioButton jrbTpTaxaJuros, jrbTpTaxaMulta, jrbTpTitulo;
    
    private javax.swing.JLabel lblCod, lblCodBarras, lblCodConta, lblCodContaList, lblCredor, lblCredorList, lblCredorNome, lblDtDocumento,
    lblDtFinal, lblDtQuitacao, lblEspDocumento, lblEspDocumentoDescicao, lblFormaCobrancaJurosDescricao, lblFormaPagto, lblFormaPagtoDescricao,
    lblNumDocumento, lblSituacao, lblTpFormaPagto, lblTpPagto, lblTpPagtoDescricao, lblTxJuros, lblTxMulta, lblVlDocumento, lblVlPagar, jLabel17,
    lvlDtVencimento;
    
    private javax.swing.JTextField txtCodBarra, txtCodContaList, txtNumDocumento, txtVlPagar;
    
    private ControlMoto telaControlMoto;
    
    static int openFrameCount = 4;
    static final int xOffset = 4, yOffset = 4;
    // End of variables declaration//GEN-END:variables

    private void limpaCampos(){
        jcbEspDocumento.setSelectedItem(null);
        jcbFormaPagto.setSelectedItem(null);
        jcbSituacao.setSelectedItem("A vencer");
        jcbTpFormaCobranca.setSelectedItem(null);
        jcbTpPagto.setSelectedItem(null);
        //jftDtDocumento.setText("");
        jftDtQuitacao.setText("");
        jftDtVencimento.setText("");
        jftTaxaJuros.setText("");
        jftTxMulta.setText("");
        jftVlDocumento.setText("");
        lblCodConta.setText("");
        txtCodBarra.setText("");
        txtCodContaList.setText("");
        jcbCredor.setSelectedItem(null);
        txtNumDocumento.setText("");
        txtVlPagar.setText("");
        lblCredorNome.setText("");
    }
}
